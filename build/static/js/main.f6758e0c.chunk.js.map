{"version":3,"sources":["NoteTitle.tsx","NoteText.tsx","NoteHeader.tsx","api.ts","utils.ts","App.utils.ts","AuthContext.tsx","NoteContext.tsx","Note.tsx","TabContext.tsx","TabNavItem.tsx","Login.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["NoteTitle","title","setTitle","header","onBlur","useState","isEditing","setIsEditing","inputRef","useRef","useEffect","current","focus","Card","Header","Form","onSubmit","event","blur","preventDefault","Group","Control","as","ref","value","onChange","target","onClick","Label","NoteText","text","setText","textAreaRef","Body","style","maxHeight","overflow","rows","source","linkTarget","escapeHtml","NoteHeader","enableTextEdit","removeNote","moveUp","moveRight","moveLeft","showModal","setShowModal","className","cursor","icon","faTrash","stopPropagation","faArrowUp","faArrowRight","faArrowLeft","faEdit","Modal","show","animation","centered","closeButton","Title","Footer","Button","variant","fetchNotes","token","a","fetch","method","headers","accept","authorization","respone","json","saveNote","note","body","JSON","stringify","id","switchNoteOrder","id1","id2","switchTabOrder","updateNotePosition","column","index","fetchTabs","saveTab","tab","removeTab","login","userName","password","response","signup","api","guid","s4","Math","floor","random","toString","substring","getPreviousNote","notes","length","previousNote","getNotesForColumn","tabId","filter","n","reduce","prev","curr","getPreviousTab","tabs","previousTab","t","filteredNotes","sort","b","getNextIndex","indexes","map","max","getNextColumn","getPreviousColumn","AuthContext","createContext","authState","saveToken","clearToken","AuthProvider","children","setAuthState","window","localStorage","getItem","setToken","Provider","setItem","removeItem","NoteContext","notesState","getNotes","Promise","resolve","addNote","moveNoteUp","moveNoteLeft","moveNoteRight","NoteProvider","setNotes","setNotesState","useContext","withErrorHandler","func","useCallback","dbNotes","Note","TabContext","tabsState","getTabs","addTab","moveTabLeft","TabProvider","setTabs","setTabsState","dbTabs","find","TabNavItem","isActive","showToolbar","setShowToolbar","editedTitle","setEditedTitle","Nav","Item","Link","eventKey","color","faWrench","visibility","Login","setUserName","setPassword","error","setError","mode","setMode","Container","fluid","Alert","dismissible","onClose","Row","Col","xs","type","App","activeTab","setActiveTab","columns","Tab","activeKey","onSelect","faPlus","position","top","right","faSignOutAlt","Content","Pane","alignSelf","width","Spinner","size","zIndex","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"wTAIaA,EAAY,SAAC,GAUnB,IATLC,EASI,EATJA,MACAC,EAQI,EARJA,SACAC,EAOI,EAPJA,OACAC,EAMI,EANJA,OAOA,EAAkCC,oBAAS,GAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACMC,EAAWC,mBAMjB,OAJAC,qBAAU,WAAO,IAAD,EACVJ,IAAW,UAAAE,EAASG,eAAT,SAAkBC,WAChC,CAACN,IAGF,cAACO,EAAA,EAAKC,OAAN,UACGR,EACC,cAACS,EAAA,EAAD,CACEC,SAAU,SAACC,GAA6C,IAAD,EACrD,UAAAT,EAASG,eAAT,SAAkBO,OAClBD,EAAME,kBAERf,OAAQ,WACNG,GAAa,GACbH,KAPJ,SAUE,cAACW,EAAA,EAAKK,MAAN,UACE,cAACL,EAAA,EAAKM,QAAN,CACEC,GAAG,QACHC,IAAK,SAACA,GAAD,OAA4Bf,EAASG,QAAUY,GACpDC,MAAOvB,EACPwB,SAAU,SAACR,GAAD,OAAWf,EAASe,EAAMS,OAAOF,cAKjD,mCACE,eAACT,EAAA,EAAD,CAAMY,QAAS,kBAAMpB,GAAa,IAAlC,UACE,cAACQ,EAAA,EAAKa,MAAN,UAAa3B,IACZE,U,kBC3CA0B,EAAW,SAAC,GAUlB,IATLC,EASI,EATJA,KACAC,EAQI,EARJA,QACAzB,EAOI,EAPJA,UACAF,EAMI,EANJA,OAOM4B,EAAcvB,mBAMpB,OAJAC,qBAAU,WAAO,IAAD,EACVJ,IAAW,UAAA0B,EAAYrB,eAAZ,SAAqBC,WACnC,CAACN,IAGF,cAACO,EAAA,EAAKoB,KAAN,CACEC,MAAO,CACLC,UAAW,QACXC,SAAU,QAHd,SAMG9B,EACC,cAACS,EAAA,EAAD,UACE,cAACA,EAAA,EAAKK,MAAN,UACE,cAACL,EAAA,EAAKM,QAAN,CACEC,GAAG,WACHC,IAAK,SAACA,GAAD,OAA+BS,EAAYrB,QAAUY,GAC1Dc,KAAM,GACNb,MAAOM,EACPL,SAAU,SAACR,GAAD,OAAWc,EAAQd,EAAMS,OAAOF,QAC1CpB,OAAQA,QAKd,cAAC,IAAD,CACEkC,OAAQR,EACRS,WAAY,iBAAM,UAClBC,YAAY,O,gBClCTC,EAAa,SAAC,GAYpB,IAXLC,EAWI,EAXJA,eACAC,EAUI,EAVJA,WACAC,EASI,EATJA,OACAC,EAQI,EARJA,UACAC,EAOI,EAPJA,SAQA,EAAkCzC,oBAAS,GAA3C,mBAAO0C,EAAP,KAAkBC,EAAlB,KAEA,OACE,qCACE,uBAAMC,UAAU,qBAAqBf,MAAO,CAAEgB,OAAQ,WAAtD,UACE,cAAC,IAAD,CACED,UAAU,qBACVE,KAAMC,IACNzB,QAAS,SAACV,GACRA,EAAMoC,kBACNL,GAAa,MAGjB,cAAC,IAAD,CACEC,UAAU,0BACVE,KAAMG,IACN3B,QAAS,SAACV,GACRA,EAAMoC,kBACNT,OAGJ,cAAC,IAAD,CACEK,UAAU,0BACVE,KAAMI,IACN5B,QAAS,SAACV,GACRA,EAAMoC,kBACNR,OAGJ,cAAC,IAAD,CACEI,UAAU,0BACVE,KAAMK,IACN7B,QAAS,SAACV,GACRA,EAAMoC,kBACNP,OAGJ,cAAC,IAAD,CACEG,UAAU,0BACVE,KAAMM,IACN9B,QAAS,SAACV,GACRA,EAAMoC,kBACNX,UAIN,eAACgB,EAAA,EAAD,CAAOC,KAAMZ,EAAWa,WAAW,EAAOC,UAAU,EAApD,UACE,cAACH,EAAA,EAAM5C,OAAP,CAAcgD,aAAW,EAAzB,SACE,cAACJ,EAAA,EAAMK,MAAP,4BAEF,eAACL,EAAA,EAAMM,OAAP,WACE,cAACC,EAAA,EAAD,CACEC,QAAQ,UACRvC,QAAS,WACPgB,IACAK,GAAa,IAJjB,iBASA,cAACiB,EAAA,EAAD,CAAQC,QAAQ,YAAYvC,QAAS,kBAAMqB,GAAa,IAAxD,0B,QCnFJmB,EAAU,uCAAG,WAAOC,GAAP,eAAAC,EAAA,sEACKC,MAAM,QAAS,CACnCC,OAAQ,MACRC,QAAS,CACPC,OAAQ,mBACR,eAAgB,mBAChBC,cAAe,UAAYN,KANd,cACXO,EADW,gBASJA,EAAQC,OATJ,mFAAH,sDAYVC,EAAQ,uCAAG,WAAOT,EAAeU,GAAtB,SAAAT,EAAA,sEACTC,MAAM,QAAS,CACnBC,OAAQ,OACRC,QAAS,CACPC,OAAQ,mBACR,eAAgB,mBAChBC,cAAe,UAAYN,GAE7BW,KAAMC,KAAKC,UAAUH,KARR,mFAAH,wDAWRnC,EAAU,uCAAG,WAAOyB,EAAP,kBAAAC,EAAA,6DAAwBa,EAAxB,EAAwBA,GAAxB,SACXZ,MAAM,SAAWY,EAAI,CACzBX,OAAQ,SACRC,QAAS,CACPC,OAAQ,mBACR,eAAgB,mBAChBC,cAAe,UAAYN,KANd,mFAAH,wDAUVe,EAAe,uCAAG,WAAOf,EAAegB,EAAaC,GAAnC,SAAAhB,EAAA,sEAChBC,MAAM,eAAgB,CAC1BC,OAAQ,OACRC,QAAS,CACPC,OAAQ,mBACR,eAAgB,mBAChBC,cAAe,UAAYN,GAE7BW,KAAMC,KAAKC,UAAU,CAAEG,MAAKC,UARR,mFAAH,0DAWfC,EAAc,uCAAG,WAAOlB,EAAegB,EAAaC,GAAnC,SAAAhB,EAAA,sEACfC,MAAM,cAAe,CACzBC,OAAQ,OACRC,QAAS,CACPC,OAAQ,mBACR,eAAgB,mBAChBC,cAAe,UAAYN,GAE7BW,KAAMC,KAAKC,UAAU,CAAEG,MAAKC,UART,mFAAH,0DAWdE,EAAkB,uCAAG,WACzBnB,EACAU,EACAU,EACAC,GAJyB,SAAApB,EAAA,sEAMnBQ,EAAST,EAAD,YAAC,eAAYU,GAAb,IAAmBU,SAAQC,WANhB,2CAAH,4DASlBC,EAAS,uCAAG,WAAOtB,GAAP,eAAAC,EAAA,sEACMC,MAAM,OAAQ,CAClCE,QAAS,CACPC,OAAQ,mBACR,eAAgB,mBAChBC,cAAe,UAAYN,KALf,cACVO,EADU,gBAQHA,EAAQC,OARL,mFAAH,sDAWTe,EAAO,uCAAG,WAAOvB,EAAewB,GAAtB,SAAAvB,EAAA,sEACRC,MAAM,OAAQ,CAClBC,OAAQ,OACRC,QAAS,CACPC,OAAQ,mBACR,eAAgB,mBAChBC,cAAe,UAAYN,GAE7BW,KAAMC,KAAKC,UAAUW,KART,mFAAH,wDAWPC,EAAS,uCAAG,WAAOzB,EAAP,kBAAAC,EAAA,6DAAwBa,EAAxB,EAAwBA,GAAxB,SACVZ,MAAM,QAAUY,EAAI,CACxBX,OAAQ,SACRC,QAAS,CACPC,OAAQ,mBACR,eAAgB,mBAChBC,cAAe,UAAYN,KANf,mFAAH,wDAUT0B,EAAK,uCAAG,WAAOC,EAAkBC,GAAzB,eAAA3B,EAAA,sEACWC,MAAM,QAAS,CACpCC,OAAQ,OACRC,QAAS,CACPC,OAAQ,mBACR,eAAgB,qCAElBM,KAAK,YAAD,OAAcgB,EAAd,qBAAmCC,KAP7B,cACNC,EADM,gBASCA,EAASrB,OATV,mFAAH,wDAYLsB,EAAM,uCAAG,WAAOH,EAAkBC,GAAzB,SAAA3B,EAAA,sEACPC,MAAM,SAAU,CACpBC,OAAQ,OACRC,QAAS,CACPC,OAAQ,mBACR,eAAgB,qCAElBM,KAAK,YAAD,OAAcgB,EAAd,qBAAmCC,KAP5B,mFAAH,wDAUCG,EAAM,CACjBhC,aACAU,WACAlC,aACAwC,kBACAI,qBACAG,YACAC,UACAE,YACAP,iBACAQ,QACAI,UCnIWE,EAAO,WAClB,IAAMC,EAAK,kBACTC,KAAKC,MAA4B,OAArB,EAAID,KAAKE,WAClBC,SAAS,IACTC,UAAU,IAEf,OACEL,IACAA,IACA,IACAA,IACA,IACAA,IACA,IACAA,IACA,IACAA,IACAA,IACAA,KChBSM,EAAkB,SAACC,EAAmB9B,GACjD,GAAI8B,EAAMC,OAAS,EAAG,OAAO,KAE7B,IAAMC,EAAeC,EAAkBH,EAAO9B,EAAKkC,MAAOlC,EAAKU,QAC5DyB,QAAO,SAACC,GAAD,OAAOA,EAAEzB,QAAUX,EAAKW,SAC/B0B,QAAO,SAACC,EAAMC,GAAP,OACNA,EAAK5B,MAAQ2B,EAAK3B,OAAS4B,EAAK5B,MAAQX,EAAKW,MAAQ4B,EAAOD,KAEhE,OAAON,EAAarB,MAAQX,EAAKW,MAAQqB,EAAe,MAG7CQ,EAAiB,SAACC,EAAkB3B,GAC/C,GAAI2B,EAAKV,OAAS,EAAG,OAAO,KAE5B,IAAMW,EAAcD,EACjBN,QAAO,SAACQ,GAAD,OAAOA,EAAEhC,QAAUG,EAAIH,SAC9B0B,QAAO,SAACC,EAAMC,GAAP,OACNA,EAAK5B,MAAQ2B,EAAK3B,OAAS4B,EAAK5B,MAAQG,EAAIH,MAAQ4B,EAAOD,KAE/D,OAAOI,EAAY/B,MAAQG,EAAIH,MAAQ+B,EAAc,MAG1CT,EAAoB,SAC/BH,EACAI,EACAxB,GAEA,IAAMkC,EAAgBd,EAAMK,QAC1B,SAACnC,GAAD,OAAUA,EAAKkC,QAAUA,GAASlC,EAAKU,SAAWA,KAGpD,OADAkC,EAAcC,MAAK,SAACtD,EAAGuD,GAAJ,OAAUvD,EAAEoB,MAAQmC,EAAEnC,SAClCiC,GAGIG,EAAe,SAC1BjB,EACAI,EACAxB,GAEA,IAAMsC,EAAUf,EAAkBH,EAAOI,EAAOxB,GAAQuC,KACtD,SAACjD,GAAD,OAAUA,EAAKW,SAEjB,OAAOa,KAAK0B,IAAL,MAAA1B,KAAI,YAAQwB,IAAW,GAGnBG,EAAgB,SAACnD,GAAD,OAAqC,IAAhBA,EAAKU,OAAe,EAAI,MAE7D0C,EAAoB,SAACpD,GAAD,OACf,IAAhBA,EAAKU,OAAe,EAAI,MCvCb2C,EAAcC,wBAAoC,CAC7DhE,MAAO,GACPiE,UAAW,YACXC,UAAW,aACXC,WAAY,eAGDC,EAAe,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,SAC7B,EAAkCpI,mBAAoB,aAAtD,mBAAOgI,EAAP,KAAkBK,EAAlB,KACA,EAA0BrI,mBACxBsI,OAAOC,aAAaC,QAAQ,UAAY,IAD1C,mBAAOzE,EAAP,KAAc0E,EAAd,KAIApI,qBAAU,WACRgI,EAAatE,EAAQ,WAAa,eACjC,CAACA,IAYJ,OACE,cAAC+D,EAAYY,SAAb,CACEvH,MAAO,CACL4C,QACAiE,YACAC,UAfY,SAAClE,GACjBuE,OAAOC,aAAaI,QAAQ,QAAS5E,GACrC0E,EAAS1E,IAcLmE,WAXa,WACjBI,OAAOC,aAAaK,WAAW,SAC/BH,EAAS,MAIT,SAQGL,KCrBMS,EAAcd,wBAAoC,CAC7DxB,MAAO,GACPuC,WAAY,UACZC,SAAU,kBAAMC,QAAQC,WACxBzE,SAAU,aACVlC,WAAY,aACZ4G,QAAS,aACTC,WAAY,aACZC,aAAc,aACdC,cAAe,eAGJC,GAAe,SAAC,GAAuB,IAArBlB,EAAoB,EAApBA,SAC7B,EAA0BpI,mBAAS,IAAnC,mBAAOuG,EAAP,KAAcgD,EAAd,KACA,EAAoCvJ,mBAAqB,WAAzD,mBAAO8I,EAAP,KAAmBU,EAAnB,KACQzF,EAAU0F,qBAAW3B,GAArB/D,MAEF2F,EAAgB,uCAAG,WAAOC,GAAP,SAAA3F,EAAA,sEAErBwF,EAAc,WAFO,SAGfG,IAHe,sDAKrBH,EAAc,SALO,uBAOrBA,EAAc,YAPO,0EAAH,sDAWhBT,EAAWa,sBAAW,sBAAC,4BAAA5F,EAAA,sEACL8B,EAAIhC,WAAWC,GADV,OACrB8F,EADqB,OAE3BN,EAASM,GAFkB,2CAG1B,CAAC9F,IAEES,EAAQ,uCAAG,WAAOC,GAAP,SAAAT,EAAA,sEACT0F,EAAgB,sBAAC,sBAAA1F,EAAA,sEACf8B,EAAItB,SAAST,EAAOU,GADL,uBAEfsE,IAFe,4CADR,mFAAH,sDAMRzG,EAAU,uCAAG,WAAOuC,GAAP,SAAAb,EAAA,sEACX0F,EAAgB,sBAAC,sBAAA1F,EAAA,sEACf8B,EAAIxD,WAAWyB,EAAO,CAAEc,OADT,uBAEfkE,IAFe,4CADN,mFAAH,sDAoBVI,EAAU,uCAAG,WAAO1E,GAAP,SAAAT,EAAA,sEACX0F,EAAgB,sBAAC,4BAAA1F,EAAA,yDACfyC,EAAeH,EAAgBC,EAAO9B,GADvB,iEAIfqB,EAAIhB,gBAAgBf,EAAOU,EAAKI,GAAI4B,EAAa5B,IAJlC,uBAKfkE,IALe,4CADN,mFAAH,sDASVM,EAAa,uCAAG,WAAO5E,GAAP,SAAAT,EAAA,sEACd0F,EAAgB,sBAAC,8BAAA1F,EAAA,yDACfmB,EAASyC,EAAcnD,GADR,wDAIfW,EAAQoC,EAAajB,EAAO9B,EAAKkC,MAAOxB,GAJzB,SAKfW,EAAIZ,mBAAmBnB,EAAOU,EAAMU,EAAQC,GAL7B,uBAMf2D,IANe,4CADH,mFAAH,sDAUbK,EAAY,uCAAG,WAAO3E,GAAP,SAAAT,EAAA,sEACb0F,EAAgB,sBAAC,8BAAA1F,EAAA,yDACfmB,EAAS0C,EAAkBpD,GADZ,wDAIfW,EAAQoC,EAAajB,EAAO9B,EAAKkC,MAAOxB,GAJzB,SAKfW,EAAIZ,mBAAmBnB,EAAOU,EAAMU,EAAQC,GAL7B,uBAMf2D,IANe,4CADJ,mFAAH,sDAUlB,OACE,cAACF,EAAYH,SAAb,CACEvH,MAAO,CACLoF,QACAuC,aACAC,WACAG,QAjDU,SAACvC,EAAexB,GAC9BoE,EAAS,GAAD,mBACHhD,GADG,CAEN,CACE1B,GAAIkB,IACJnG,MAAO,GACP6B,KAAM,GACNkF,QACAxB,SACAC,MAAOoC,EAAajB,EAAOI,EAAOxB,QAyClCX,WACAlC,aACA8G,eACAC,gBACAF,cAVJ,SAaGf,KCxHM0B,GAAO,SAAC,GAAkC,IAAhCrF,EAA+B,EAA/BA,KACrB,EAAkCzE,oBAAS,GAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAA0BF,mBAASyE,EAAK7E,OAAxC,mBAAOA,EAAP,KAAcC,EAAd,KACA,EAAwBG,mBAASyE,EAAKhD,MAAtC,mBAAOA,EAAP,KAAaC,EAAb,KAEA,EAMI+H,qBAAWZ,GALbvG,EADF,EACEA,WACAkC,EAFF,EAEEA,SACA4E,EAHF,EAGEA,aACAC,EAJF,EAIEA,cACAF,EALF,EAKEA,WAGIrJ,EACJ,cAAC,EAAD,CACEuC,eAAgB,kBAAMnC,GAAa,IACnCoC,WAAY,kBAAMA,EAAWmC,EAAKI,KAClCtC,OAAQ,kBAAM4G,EAAW1E,IACzBjC,UAAW,kBAAM6G,EAAc,2BAAK5E,GAAN,IAAY7E,QAAO6B,WACjDgB,SAAU,kBAAM2G,EAAa,2BAAK3E,GAAN,IAAY7E,QAAO6B,aAInD,OACE,eAACjB,EAAA,EAAD,CAAMoC,UAAU,OAAhB,UACE,cAAC,EAAD,CACEhD,MAAOA,EACPC,SAAUA,EACVC,OAAQA,EACRC,OAAQ,WACNyE,EAAS,2BACJC,GADG,IAEN7E,QACA6B,aAIN,cAAC,EAAD,CACEA,KAAMA,EACNC,QAASA,EACTzB,UAAWA,EACXF,OAAQ,WACNG,GAAa,GACbsE,EAAS,2BACJC,GADG,IAEN7E,QACA6B,iBCnCCsI,GAAahC,wBAAmC,CAC3Db,KAAM,GACN8C,UAAW,UACXC,QAAS,kBAAMjB,QAAQC,WACvBiB,OAAQ,aACR5E,QAAS,aACTE,UAAW,aACX2E,YAAa,eAGFC,GAAc,SAAC,GAAuB,IAArBhC,EAAoB,EAApBA,SAC5B,EAAwBpI,mBAAS,IAAjC,mBAAOkH,EAAP,KAAamD,EAAb,KACA,EAAkCrK,mBAAoB,WAAtD,mBAAOgK,EAAP,KAAkBM,EAAlB,KACQvG,EAAU0F,qBAAW3B,GAArB/D,MAEF2F,EAAgB,uCAAG,WAAOC,GAAP,SAAA3F,EAAA,sEAErBsG,EAAa,WAFQ,SAGfX,IAHe,sDAKrBW,EAAa,SALQ,uBAOrBA,EAAa,YAPQ,0EAAH,sDAWhBL,EAAUL,sBAAW,sBAAC,sBAAA5F,EAAA,sDAC1B0F,EAAgB,sBAAC,4BAAA1F,EAAA,sEACM8B,EAAIT,UAAUtB,GADpB,QACTwG,EADS,QAERjD,MAAK,SAACtD,EAAGuD,GAAJ,OAAUvD,EAAEoB,MAAQmC,EAAEnC,SAClCiF,EAAQE,GAHO,4CADS,2CAMzB,CAACxG,IAEEmG,EAAM,uCAAG,sBAAAlG,EAAA,sDACb0F,EAAgB,sBAAC,sBAAA1F,EAAA,sEACT8B,EAAIR,QAAQvB,EAAO,CACvBc,GAAIkB,IACJnG,MAAO,UACPwF,MAAO8B,EAAKV,OAAS,IAJR,uBAMTyD,IANS,4CADJ,2CAAH,qDAWN3E,EAAO,uCAAG,WAAOC,GAAP,SAAAvB,EAAA,sDACd0F,EAAgB,sBAAC,sBAAA1F,EAAA,sEACT8B,EAAIR,QAAQvB,EAAOwB,GADV,uBAET0E,IAFS,4CADH,2CAAH,sDAOPzE,EAAS,uCAAG,WAAOX,GAAP,SAAAb,EAAA,sDAChB0F,EAAgB,sBAAC,sBAAA1F,EAAA,sEACT8B,EAAIN,UAAUzB,EAAO,CAAEc,OADd,uBAEToF,IAFS,4CADD,2CAAH,sDAOTE,EAAW,uCAAG,WAAOtF,GAAP,SAAAb,EAAA,sDAClB0F,EAAgB,sBAAC,8BAAA1F,EAAA,yDACTuB,EAAM2B,EAAKsD,MAAK,SAACjF,GAAD,OAASA,EAAIV,KAAOA,KAD3B,oDAITsC,EAAcF,EAAeC,EAAM3B,GAJ1B,iEAOTO,EAAIb,eAAelB,EAAOwB,EAAIV,GAAIsC,EAAYtC,IAPrC,wBAQToF,IARS,6CADC,2CAAH,sDAajB,OACE,cAACF,GAAWrB,SAAZ,CACEvH,MAAO,CACL+F,OACA8C,YACAC,UACAC,SACA5E,UACAE,YACA2E,eARJ,SAWG/B,KCzFMqC,GAKR,SAAC,GAAoC,IAAlC5F,EAAiC,EAAjCA,GAAIO,EAA6B,EAA7BA,MAAOxF,EAAsB,EAAtBA,MAAO8K,EAAe,EAAfA,SACxB,EAAsC1K,oBAAS,GAA/C,mBAAO2K,EAAP,KAAoBC,EAApB,KACA,EAAkC5K,oBAAS,GAA3C,mBAAO0C,EAAP,KAAkBC,EAAlB,KACA,EAAkC3C,oBAAS,GAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAsCF,mBAASJ,GAA/C,mBAAOiL,EAAP,KAAoBC,EAApB,KAEA,EAA4CrB,qBAAWM,IAA/CzE,EAAR,EAAQA,QAASE,EAAjB,EAAiBA,UAAW2E,EAA5B,EAA4BA,YAE5B,OACE,cAACY,EAAA,EAAIC,KAAL,CAAmBjL,OAAQ,kBAAM6K,GAAe,IAAhD,SACE,eAACG,EAAA,EAAIE,KAAL,CAAUC,SAAUrG,EAApB,UACG5E,EACC,cAACS,EAAA,EAAD,CACEC,SAAU,SAACC,GACTA,EAAME,iBACNwE,EAAQ,CAAET,KAAIO,QAAOxF,MAAOiL,IAC5B3K,GAAa,IAEfH,OAAQ,WACNuF,EAAQ,CAAET,KAAIO,QAAOxF,MAAOiL,IAC5B3K,GAAa,IARjB,SAWE,cAACQ,EAAA,EAAKK,MAAN,UACE,cAACL,EAAA,EAAKM,QAAN,CACEC,GAAG,QACHE,MAAO0J,EACPzJ,SAAU,SAACR,GAAD,OAAWkK,EAAelK,EAAMS,OAAOF,cAKvD0J,EAEDF,GAAeD,IAAazK,GAC3B,qCACE,cAAC,IAAD,CACE2C,UAAU,cACVC,OAAO,UACPC,KAAMM,IACN9B,QAAS,SAACV,GACRA,EAAMoC,kBACN9C,GAAa,MAGjB,cAAC,IAAD,CACE0C,UAAU,cACVC,OAAO,UACPC,KAAMK,IACN7B,QAAS,SAACV,GACRA,EAAMoC,kBACNmH,EAAYtF,MAGhB,cAAC,IAAD,CACEjC,UAAU,cACVC,OAAO,UACPC,KAAMC,IACNzB,QAAS,SAACV,GACRA,EAAMoC,kBACNL,GAAa,UAMnBgI,GAAeD,IAAazK,GAC5B,sBAAM2C,UAAU,SAAhB,SACE,cAAC,IAAD,CACEA,UAAU,cACVC,OAAO,UACPsI,MAAO,QACPrI,KAAMsI,IACNvJ,MAAO,CAAEwJ,WAAYX,EAAW,UAAY,UAC5CpJ,QAAS,WACPsJ,GAAe,QAKvB,eAACvH,EAAA,EAAD,CAAOC,KAAMZ,EAAWa,WAAW,EAAOC,UAAU,EAApD,UACE,cAACH,EAAA,EAAM5C,OAAP,CAAcgD,aAAW,EAAzB,SACE,cAACJ,EAAA,EAAMK,MAAP,2BAEF,eAACL,EAAA,EAAMM,OAAP,WACE,cAACC,EAAA,EAAD,CACEC,QAAQ,UACRvC,QAAS,WACPkE,EAAUX,GACVlC,GAAa,IAJjB,iBASA,cAACiB,EAAA,EAAD,CAAQC,QAAQ,YAAYvC,QAAS,kBAAMqB,GAAa,IAAxD,0BArFOkC,IClBNyG,GAA2B,WACtC,MAAgCtL,mBAAS,IAAzC,mBAAO0F,EAAP,KAAiB6F,EAAjB,KACA,EAAgCvL,mBAAS,IAAzC,mBAAO2F,EAAP,KAAiB6F,EAAjB,KACA,EAA0BxL,mBAAS,IAAnC,mBAAOyL,EAAP,KAAcC,EAAd,KACA,EAAwB1L,mBAA6B,SAArD,mBAAO2L,EAAP,KAAaC,EAAb,KAEQ3D,EAAcwB,qBAAW3B,GAAzBG,UAEFxC,EAAK,uCAAG,4BAAAzB,EAAA,sEAEV0H,EAAS,IAFC,SAGa5F,EAAIL,MAAMC,EAAUC,GAHjC,OAGJC,EAHI,OAIVqC,EAAUrC,EAAS7B,OAJT,gDAMV2H,EAAS,mBANC,yDAAH,qDAUL7F,EAAM,uCAAG,sBAAA7B,EAAA,sEAEX0H,EAAS,IAFE,SAGL5F,EAAID,OAAOH,EAAUC,GAHhB,OAIX6F,EAAY,IACZI,EAAQ,SALG,gDAOXF,EAAS,sBAPE,yDAAH,qDAyEZ,OACE,eAACG,EAAA,EAAD,CAAWC,OAAK,EAAClJ,UAAU,OAA3B,YACK6I,GACD,cAACM,EAAA,EAAD,CAAOlI,QAAQ,SAASmI,aAAa,EAAMC,QAAS,kBAAMP,EAAS,KAAnE,SACGD,IAGL,eAACS,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAKC,GAAI,IACT,eAACD,EAAA,EAAD,CAAKC,GAAI,EAAT,UACE,oBAAIxJ,UAAU,YAAd,mBACU,UAAT+I,GAvEL,eAACjL,EAAA,EAAD,WACE,eAACA,EAAA,EAAKK,MAAN,WACE,cAACL,EAAA,EAAKa,MAAN,uBACA,cAACb,EAAA,EAAKM,QAAN,CACEG,MAAOuE,EACPtE,SAAU,SAACR,GAAD,OAAW2K,EAAY3K,EAAMS,OAAOF,aAGlD,eAACT,EAAA,EAAKK,MAAN,WACE,cAACL,EAAA,EAAKa,MAAN,uBACA,cAACb,EAAA,EAAKM,QAAN,CACEqL,KAAK,WACLlL,MAAOwE,EACPvE,SAAU,SAACR,GAAD,OAAW4K,EAAY5K,EAAMS,OAAOF,aAGlD,eAACT,EAAA,EAAKK,MAAN,WACE,cAAC6C,EAAA,EAAD,CAAQC,QAAQ,UAAUvC,QAASmE,EAAnC,mBAGA,cAAC7B,EAAA,EAAD,CACEC,QAAQ,QACRjB,UAAU,cACVtB,QAAS,kBAAMsK,EAAQ,WAHzB,2BAoDU,WAATD,GAtCL,eAACjL,EAAA,EAAD,WACE,eAACA,EAAA,EAAKK,MAAN,WACE,cAACL,EAAA,EAAKa,MAAN,uBACA,cAACb,EAAA,EAAKM,QAAN,CACEG,MAAOuE,EACPtE,SAAU,SAACR,GAAD,OAAW2K,EAAY3K,EAAMS,OAAOF,aAGlD,eAACT,EAAA,EAAKK,MAAN,WACE,cAACL,EAAA,EAAKa,MAAN,uBAEA,cAACb,EAAA,EAAKM,QAAN,CACEqL,KAAK,WACLlL,MAAOwE,EACPvE,SAAU,SAACR,GAAD,OAAW4K,EAAY5K,EAAMS,OAAOF,aAGlD,cAACT,EAAA,EAAKK,MAAN,UACE,cAAC6C,EAAA,EAAD,CAAQC,QAAQ,UAAUvC,QAASuE,EAAnC,6BAsBF,cAACsG,EAAA,EAAD,CAAKC,GAAI,WCoBFE,OAnHf,WACE,MAAkCtM,mBAAS,IAA3C,mBAAOuM,EAAP,KAAkBC,EAAlB,KACA,EAAkBxM,mBAAS,CAAC,EAAG,IAAxByM,EAAP,oBAEA,EAAkChD,qBAAW3B,GAArCE,EAAR,EAAQA,UAAWE,EAAnB,EAAmBA,WACnB,EAA6CuB,qBAAWM,IAAhD7C,EAAR,EAAQA,KAAM+C,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,OAAQF,EAA/B,EAA+BA,UAC/B,EAAiDP,qBAAWZ,GAApDtC,EAAR,EAAQA,MAAOwC,EAAf,EAAeA,SAAUG,EAAzB,EAAyBA,QAASJ,EAAlC,EAAkCA,WAYlC,OAVAzI,qBAAU,WACR,IAAM4D,EAAK,uCAAG,sBAAAD,EAAA,sEACNiG,IADM,uBAENlB,IAFM,2CAAH,qDAIO,aAAdf,GACF/D,MAED,CAACgG,EAASlB,EAAUf,IAEL,cAAdA,EACK,cAAC,GAAD,IAIP,eAAC6D,EAAA,EAAD,CAAWC,OAAK,EAAClJ,UAAU,OAA3B,WACmB,UAAfkG,GAAwC,UAAdkB,IAC1B,cAAC+B,EAAA,EAAD,CAAOlI,QAAQ,SAASmI,aAAa,EAArC,oCAIF,eAACU,EAAA,EAAIb,UAAL,CACEhH,GAAG,OACH8H,UAAWJ,EACXK,SAAU,SAACjG,GAAD,OAA0BA,GAAS6F,EAAa7F,IAH5D,UAKE,eAACoE,EAAA,EAAD,CAAKlH,QAAQ,OAAb,UACGqD,EAAKQ,KAAI,SAACnC,GAAD,OACR,cAAC,GAAD,CAEEV,GAAIU,EAAIV,GACRO,MAAOG,EAAIH,MACXxF,MAAO2F,EAAI3F,MACX8K,SAAU6B,IAAchH,EAAIV,IAJvBU,EAAIV,OAOb,cAACkG,EAAA,EAAIC,KAAL,UACE,cAACD,EAAA,EAAIE,KAAL,CAAUC,SAAU,MAApB,SACE,qBAAKtI,UAAU,SAAf,SACE,cAAC,IAAD,CACEA,UAAU,SACVC,OAAO,UACPsI,MAAO,QACPrI,KAAM+J,IACNvL,QAAS4I,SARF,OAaf,qBACEtH,UAAU,SACVf,MAAO,CAAEiL,SAAU,WAAYC,IAAK,GAAIC,MAAO,IAFjD,SAIE,cAAC,IAAD,CACEpK,UAAU,SACVC,OAAO,UACPsI,MAAO,QACPrI,KAAMmK,IACN3L,QAAS4G,SAKf,cAACwE,EAAA,EAAIQ,QAAL,UACGhG,EAAKQ,KAAI,SAACnC,GAAD,OACR,cAACmH,EAAA,EAAIS,KAAL,CAAuBjC,SAAU3F,EAAIV,GAArC,SACE,cAACqH,EAAA,EAAD,UACGO,EAAQ/E,KAAI,SAACvC,GAAD,OACX,eAACgH,EAAA,EAAD,WACGzF,EAAkBH,EAAOhB,EAAIV,GAAIM,GAAQuC,KAAI,SAACjD,GAAD,OAC5C,cAAC,GAAD,CAAoBA,KAAMA,GAAfA,EAAKI,OAElB,qBAAKjC,UAAU,mBAAf,SACE,sBAAMA,UAAU,SAAhB,SACE,cAAC,IAAD,CACEf,MAAO,CAAEuL,UAAW,SAAUC,MAAO,QACrCxK,OAAO,UACPsI,MAAO,QACPrI,KAAM+J,IACNvL,QAAS,kBAAM4H,EAAQ3D,EAAIV,GAAIM,YAX7BA,SAHDI,EAAIV,aAyBT,YAAdmF,GAA0C,YAAflB,IAC3B,cAACwE,EAAA,EAAD,CACE/J,UAAU,SACVM,QAAQ,UACR0J,KAAK,KACL1L,MAAO,CACLiL,SAAU,QACVE,MAAO,MACPQ,OAAQ,IACRT,IAAK,aCnHGU,QACW,cAA7BnF,OAAOoF,SAASC,UAEe,UAA7BrF,OAAOoF,SAASC,UAEhBrF,OAAOoF,SAASC,SAASC,MACvB,2DCVNC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,UACE,cAAC,GAAD,UACE,cAAC,GAAD,UACE,cAAC,GAAD,YAKRC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAA/C,GACLgD,QAAQhD,MAAMA,EAAMiD,c","file":"static/js/main.f6758e0c.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport Card from \"react-bootstrap/Card\";\nimport Form from \"react-bootstrap/Form\";\n\nexport const NoteTitle = ({\n  title,\n  setTitle,\n  header,\n  onBlur,\n}: {\n  title: string;\n  setTitle: (text: string) => void;\n  header: JSX.Element;\n  onBlur: () => void;\n}) => {\n  const [isEditing, setIsEditing] = useState(false);\n  const inputRef = useRef<HTMLInputElement>();\n\n  useEffect(() => {\n    if (isEditing) inputRef.current?.focus();\n  }, [isEditing]);\n\n  return (\n    <Card.Header>\n      {isEditing ? (\n        <Form\n          onSubmit={(event: React.FormEvent<HTMLFormElement>) => {\n            inputRef.current?.blur();\n            event.preventDefault();\n          }}\n          onBlur={() => {\n            setIsEditing(false);\n            onBlur();\n          }}\n        >\n          <Form.Group>\n            <Form.Control\n              as=\"input\"\n              ref={(ref: HTMLInputElement) => (inputRef.current = ref)}\n              value={title}\n              onChange={(event) => setTitle(event.target.value)}\n            />\n          </Form.Group>\n        </Form>\n      ) : (\n        <>\n          <Form onClick={() => setIsEditing(true)}>\n            <Form.Label>{title}</Form.Label>\n            {header}\n          </Form>\n        </>\n      )}\n    </Card.Header>\n  );\n};\n","import React, { useEffect, useRef } from \"react\";\nimport ReactMarkdown from \"react-markdown/with-html\";\nimport Form from \"react-bootstrap/Form\";\nimport Card from \"react-bootstrap/Card\";\n\nexport const NoteText = ({\n  text,\n  setText,\n  isEditing,\n  onBlur,\n}: {\n  text: string;\n  setText: (text: string) => void;\n  isEditing: boolean;\n  onBlur: () => void;\n}) => {\n  const textAreaRef = useRef<HTMLTextAreaElement>();\n\n  useEffect(() => {\n    if (isEditing) textAreaRef.current?.focus();\n  }, [isEditing]);\n\n  return (\n    <Card.Body\n      style={{\n        maxHeight: \"600px\",\n        overflow: \"auto\",\n      }}\n    >\n      {isEditing ? (\n        <Form>\n          <Form.Group>\n            <Form.Control\n              as=\"textarea\"\n              ref={(ref: HTMLTextAreaElement) => (textAreaRef.current = ref)}\n              rows={20}\n              value={text}\n              onChange={(event) => setText(event.target.value)}\n              onBlur={onBlur}\n            />\n          </Form.Group>\n        </Form>\n      ) : (\n        <ReactMarkdown\n          source={text}\n          linkTarget={() => \"_blank\"}\n          escapeHtml={false}\n        />\n      )}\n    </Card.Body>\n  );\n};\n","import React, { useState } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faEdit,\n  faTrash,\n  faArrowUp,\n  faArrowRight,\n  faArrowLeft,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport Modal from \"react-bootstrap/Modal\";\nimport Button from \"react-bootstrap/Button\";\n\nexport const NoteHeader = ({\n  enableTextEdit,\n  removeNote,\n  moveUp,\n  moveRight,\n  moveLeft,\n}: {\n  enableTextEdit: () => void;\n  removeNote: () => void;\n  moveUp: () => void;\n  moveRight: () => void;\n  moveLeft: () => void;\n}) => {\n  const [showModal, setShowModal] = useState(false);\n\n  return (\n    <>\n      <span className=\"fading float-right\" style={{ cursor: \"pointer\" }}>\n        <FontAwesomeIcon\n          className=\"float-right fading\"\n          icon={faTrash}\n          onClick={(event) => {\n            event.stopPropagation();\n            setShowModal(true);\n          }}\n        />\n        <FontAwesomeIcon\n          className=\"float-right fading mr-2\"\n          icon={faArrowUp}\n          onClick={(event) => {\n            event.stopPropagation();\n            moveUp();\n          }}\n        />\n        <FontAwesomeIcon\n          className=\"float-right fading mr-2\"\n          icon={faArrowRight}\n          onClick={(event) => {\n            event.stopPropagation();\n            moveRight();\n          }}\n        />\n        <FontAwesomeIcon\n          className=\"float-right fading mr-2\"\n          icon={faArrowLeft}\n          onClick={(event) => {\n            event.stopPropagation();\n            moveLeft();\n          }}\n        />\n        <FontAwesomeIcon\n          className=\"float-right fading mr-2\"\n          icon={faEdit}\n          onClick={(event) => {\n            event.stopPropagation();\n            enableTextEdit();\n          }}\n        />\n      </span>\n      <Modal show={showModal} animation={false} centered={true}>\n        <Modal.Header closeButton>\n          <Modal.Title>Remove note</Modal.Title>\n        </Modal.Header>\n        <Modal.Footer>\n          <Button\n            variant=\"primary\"\n            onClick={() => {\n              removeNote();\n              setShowModal(false);\n            }}\n          >\n            Yes\n          </Button>\n          <Button variant=\"secondary\" onClick={() => setShowModal(false)}>\n            No\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  );\n};\n","import { NoteData, NotesTab } from \"./types\";\n\nconst fetchNotes = async (token: string): Promise<NoteData[]> => {\n  const respone = await fetch(\"notes\", {\n    method: \"GET\",\n    headers: {\n      accept: \"application/json\",\n      \"content-type\": \"application/json\",\n      authorization: \"Bearer \" + token,\n    },\n  });\n  return await respone.json();\n};\n\nconst saveNote = async (token: string, note: NoteData) =>\n  await fetch(\"notes\", {\n    method: \"POST\",\n    headers: {\n      accept: \"application/json\",\n      \"content-type\": \"application/json\",\n      authorization: \"Bearer \" + token,\n    },\n    body: JSON.stringify(note),\n  });\n\nconst removeNote = async (token: string, { id }: { id: string }) =>\n  await fetch(\"notes/\" + id, {\n    method: \"DELETE\",\n    headers: {\n      accept: \"application/json\",\n      \"content-type\": \"application/json\",\n      authorization: \"Bearer \" + token,\n    },\n  });\n\nconst switchNoteOrder = async (token: string, id1: string, id2: string) =>\n  await fetch(\"notes/switch\", {\n    method: \"POST\",\n    headers: {\n      accept: \"application/json\",\n      \"content-type\": \"application/json\",\n      authorization: \"Bearer \" + token,\n    },\n    body: JSON.stringify({ id1, id2 }),\n  });\n\nconst switchTabOrder = async (token: string, id1: string, id2: string) =>\n  await fetch(\"tabs/switch\", {\n    method: \"POST\",\n    headers: {\n      accept: \"application/json\",\n      \"content-type\": \"application/json\",\n      authorization: \"Bearer \" + token,\n    },\n    body: JSON.stringify({ id1, id2 }),\n  });\n\nconst updateNotePosition = async (\n  token: string,\n  note: NoteData,\n  column: number,\n  index: number\n) => {\n  await saveNote(token, { ...note, column, index });\n};\n\nconst fetchTabs = async (token: string): Promise<NotesTab[]> => {\n  const respone = await fetch(\"tabs\", {\n    headers: {\n      accept: \"application/json\",\n      \"content-type\": \"application/json\",\n      authorization: \"Bearer \" + token,\n    },\n  });\n  return await respone.json();\n};\n\nconst saveTab = async (token: string, tab: NotesTab) =>\n  await fetch(\"tabs\", {\n    method: \"POST\",\n    headers: {\n      accept: \"application/json\",\n      \"content-type\": \"application/json\",\n      authorization: \"Bearer \" + token,\n    },\n    body: JSON.stringify(tab),\n  });\n\nconst removeTab = async (token: string, { id }: { id: string }) =>\n  await fetch(\"tabs/\" + id, {\n    method: \"DELETE\",\n    headers: {\n      accept: \"application/json\",\n      \"content-type\": \"application/json\",\n      authorization: \"Bearer \" + token,\n    },\n  });\n\nconst login = async (userName: string, password: string) => {\n  const response = await fetch(\"login\", {\n    method: \"POST\",\n    headers: {\n      accept: \"application/json\",\n      \"content-type\": \"application/x-www-form-urlencoded\",\n    },\n    body: `userName=${userName}&password=${password}`,\n  });\n  return await response.json();\n};\n\nconst signup = async (userName: string, password: string) =>\n  await fetch(\"signup\", {\n    method: \"POST\",\n    headers: {\n      accept: \"application/json\",\n      \"content-type\": \"application/x-www-form-urlencoded\",\n    },\n    body: `userName=${userName}&password=${password}`,\n  });\n\nexport const api = {\n  fetchNotes,\n  saveNote,\n  removeNote,\n  switchNoteOrder,\n  updateNotePosition,\n  fetchTabs,\n  saveTab,\n  removeTab,\n  switchTabOrder,\n  login,\n  signup,\n};\n","export const guid = () => {\n  const s4 = () =>\n    Math.floor((1 + Math.random()) * 0x10000)\n      .toString(16)\n      .substring(1);\n\n  return (\n    s4() +\n    s4() +\n    \"-\" +\n    s4() +\n    \"-\" +\n    s4() +\n    \"-\" +\n    s4() +\n    \"-\" +\n    s4() +\n    s4() +\n    s4()\n  );\n};\n","import { NoteData, NotesTab } from \"./types\";\n\nexport const getPreviousNote = (notes: NoteData[], note: NoteData) => {\n  if (notes.length < 2) return null;\n\n  const previousNote = getNotesForColumn(notes, note.tabId, note.column)\n    .filter((n) => n.index !== note.index)\n    .reduce((prev, curr) =>\n      curr.index > prev.index && curr.index < note.index ? curr : prev\n    );\n  return previousNote.index < note.index ? previousNote : null;\n};\n\nexport const getPreviousTab = (tabs: NotesTab[], tab: NotesTab) => {\n  if (tabs.length < 2) return null;\n\n  const previousTab = tabs\n    .filter((t) => t.index !== tab.index)\n    .reduce((prev, curr) =>\n      curr.index > prev.index && curr.index < tab.index ? curr : prev\n    );\n  return previousTab.index < tab.index ? previousTab : null;\n};\n\nexport const getNotesForColumn = (\n  notes: NoteData[],\n  tabId: string,\n  column: number\n) => {\n  const filteredNotes = notes.filter(\n    (note) => note.tabId === tabId && note.column === column\n  );\n  filteredNotes.sort((a, b) => a.index - b.index);\n  return filteredNotes;\n};\n\nexport const getNextIndex = (\n  notes: NoteData[],\n  tabId: string,\n  column: number\n) => {\n  const indexes = getNotesForColumn(notes, tabId, column).map(\n    (note) => note.index\n  );\n  return Math.max(...indexes) + 1;\n};\n\nexport const getNextColumn = (note: NoteData) => (note.column === 1 ? 2 : null);\n\nexport const getPreviousColumn = (note: NoteData) =>\n  note.column === 2 ? 1 : null;\n","import React, { createContext, useState, useEffect } from \"react\";\n\ntype AuthState = \"loggedIn\" | \"loggedOut\";\n\ninterface AuthContextInterface {\n  token: string;\n  authState: AuthState;\n  saveToken: (token: string) => void;\n  clearToken: () => void;\n}\n\nexport const AuthContext = createContext<AuthContextInterface>({\n  token: \"\",\n  authState: \"loggedOut\",\n  saveToken: () => {},\n  clearToken: () => {},\n});\n\nexport const AuthProvider = ({ children }: any) => {\n  const [authState, setAuthState] = useState<AuthState>(\"loggedOut\");\n  const [token, setToken] = useState(\n    window.localStorage.getItem(\"token\") || \"\"\n  );\n\n  useEffect(() => {\n    setAuthState(token ? \"loggedIn\" : \"loggedOut\");\n  }, [token]);\n\n  const saveToken = (token: string) => {\n    window.localStorage.setItem(\"token\", token);\n    setToken(token);\n  };\n\n  const clearToken = () => {\n    window.localStorage.removeItem(\"token\");\n    setToken(\"\");\n  };\n\n  return (\n    <AuthContext.Provider\n      value={{\n        token,\n        authState,\n        saveToken,\n        clearToken,\n      }}\n    >\n      {children}\n    </AuthContext.Provider>\n  );\n};\n","import React, { createContext, useState, useCallback, useContext } from \"react\";\nimport { NoteData } from \"./types\";\nimport { api } from \"./api\";\nimport { guid } from \"./utils\";\nimport {\n  getNextIndex,\n  getPreviousNote,\n  getPreviousColumn,\n  getNextColumn,\n} from \"./App.utils\";\nimport { AuthContext } from \"./AuthContext\";\n\ntype NotesState = \"initial\" | \"loading\" | \"finished\" | \"error\";\n\ninterface NoteContextInterface {\n  notes: NoteData[];\n  notesState: NotesState;\n  getNotes: () => Promise<void>;\n  saveNote: (note: NoteData) => void;\n  removeNote: (id: string) => void;\n  addNote: (tabId: string, column: number) => void;\n  moveNoteUp: (note: NoteData) => void;\n  moveNoteLeft: (note: NoteData) => void;\n  moveNoteRight: (note: NoteData) => void;\n}\n\nexport const NoteContext = createContext<NoteContextInterface>({\n  notes: [],\n  notesState: \"initial\",\n  getNotes: () => Promise.resolve(),\n  saveNote: () => {},\n  removeNote: () => {},\n  addNote: () => {},\n  moveNoteUp: () => {},\n  moveNoteLeft: () => {},\n  moveNoteRight: () => {},\n});\n\nexport const NoteProvider = ({ children }: any) => {\n  const [notes, setNotes] = useState([] as NoteData[]);\n  const [notesState, setNotesState] = useState<NotesState>(\"initial\");\n  const { token } = useContext(AuthContext);\n\n  const withErrorHandler = async (func: () => Promise<any>): Promise<any> => {\n    try {\n      setNotesState(\"loading\");\n      await func();\n    } catch {\n      setNotesState(\"error\");\n    } finally {\n      setNotesState(\"finished\");\n    }\n  };\n\n  const getNotes = useCallback(async () => {\n    const dbNotes = await api.fetchNotes(token);\n    setNotes(dbNotes);\n  }, [token]);\n\n  const saveNote = async (note: NoteData) =>\n    await withErrorHandler(async () => {\n      await api.saveNote(token, note);\n      await getNotes();\n    });\n\n  const removeNote = async (id: string) =>\n    await withErrorHandler(async () => {\n      await api.removeNote(token, { id });\n      await getNotes();\n    });\n\n  const addNote = (tabId: string, column: number) => {\n    setNotes([\n      ...notes,\n      {\n        id: guid(),\n        title: \"\",\n        text: \"\",\n        tabId,\n        column,\n        index: getNextIndex(notes, tabId, column),\n      },\n    ]);\n  };\n\n  const moveNoteUp = async (note: NoteData) =>\n    await withErrorHandler(async () => {\n      const previousNote = getPreviousNote(notes, note);\n      if (!previousNote) return;\n\n      await api.switchNoteOrder(token, note.id, previousNote.id);\n      await getNotes();\n    });\n\n  const moveNoteRight = async (note: NoteData) =>\n    await withErrorHandler(async () => {\n      const column = getNextColumn(note);\n      if (!column) return;\n\n      const index = getNextIndex(notes, note.tabId, column);\n      await api.updateNotePosition(token, note, column, index);\n      await getNotes();\n    });\n\n  const moveNoteLeft = async (note: NoteData) =>\n    await withErrorHandler(async () => {\n      const column = getPreviousColumn(note);\n      if (!column) return;\n\n      const index = getNextIndex(notes, note.tabId, column);\n      await api.updateNotePosition(token, note, column, index);\n      await getNotes();\n    });\n\n  return (\n    <NoteContext.Provider\n      value={{\n        notes,\n        notesState,\n        getNotes,\n        addNote,\n        saveNote,\n        removeNote,\n        moveNoteLeft,\n        moveNoteRight,\n        moveNoteUp,\n      }}\n    >\n      {children}\n    </NoteContext.Provider>\n  );\n};\n","import React, { useState, useContext } from \"react\";\nimport Card from \"react-bootstrap/Card\";\nimport { NoteTitle } from \"./NoteTitle\";\nimport { NoteText } from \"./NoteText\";\nimport { NoteData } from \"./types\";\nimport { NoteHeader } from \"./NoteHeader\";\nimport { NoteContext } from \"./NoteContext\";\n\nexport const Note = ({ note }: { note: NoteData }) => {\n  const [isEditing, setIsEditing] = useState(false);\n  const [title, setTitle] = useState(note.title);\n  const [text, setText] = useState(note.text);\n\n  const {\n    removeNote,\n    saveNote,\n    moveNoteLeft,\n    moveNoteRight,\n    moveNoteUp,\n  } = useContext(NoteContext);\n\n  const header = (\n    <NoteHeader\n      enableTextEdit={() => setIsEditing(true)}\n      removeNote={() => removeNote(note.id)}\n      moveUp={() => moveNoteUp(note)}\n      moveRight={() => moveNoteRight({ ...note, title, text })}\n      moveLeft={() => moveNoteLeft({ ...note, title, text })}\n    />\n  );\n\n  return (\n    <Card className=\"mt-4\">\n      <NoteTitle\n        title={title}\n        setTitle={setTitle}\n        header={header}\n        onBlur={() => {\n          saveNote({\n            ...note,\n            title,\n            text,\n          });\n        }}\n      />\n      <NoteText\n        text={text}\n        setText={setText}\n        isEditing={isEditing}\n        onBlur={() => {\n          setIsEditing(false);\n          saveNote({\n            ...note,\n            title,\n            text,\n          });\n        }}\n      />\n    </Card>\n  );\n};\n","import React, { createContext, useState, useCallback, useContext } from \"react\";\nimport { NotesTab } from \"./types\";\nimport { api } from \"./api\";\nimport { guid } from \"./utils\";\nimport { getPreviousTab } from \"./App.utils\";\nimport { AuthContext } from \"./AuthContext\";\n\ntype TabsState = \"initial\" | \"loading\" | \"finished\" | \"error\";\n\ninterface TabContextInterface {\n  tabs: NotesTab[];\n  tabsState: TabsState;\n  getTabs: () => Promise<void>;\n  addTab: () => void;\n  saveTab: (tab: NotesTab) => void;\n  removeTab: (id: string) => void;\n  moveTabLeft: (id: string) => void;\n}\n\nexport const TabContext = createContext<TabContextInterface>({\n  tabs: [],\n  tabsState: \"initial\",\n  getTabs: () => Promise.resolve(),\n  addTab: () => {},\n  saveTab: () => {},\n  removeTab: () => {},\n  moveTabLeft: () => {},\n});\n\nexport const TabProvider = ({ children }: any) => {\n  const [tabs, setTabs] = useState([] as NotesTab[]);\n  const [tabsState, setTabsState] = useState<TabsState>(\"initial\");\n  const { token } = useContext(AuthContext);\n\n  const withErrorHandler = async (func: () => Promise<any>): Promise<any> => {\n    try {\n      setTabsState(\"loading\");\n      await func();\n    } catch {\n      setTabsState(\"error\");\n    } finally {\n      setTabsState(\"finished\");\n    }\n  };\n\n  const getTabs = useCallback(async () => {\n    withErrorHandler(async () => {\n      const dbTabs = await api.fetchTabs(token);\n      dbTabs.sort((a, b) => a.index - b.index);\n      setTabs(dbTabs);\n    });\n  }, [token]);\n\n  const addTab = async () => {\n    withErrorHandler(async () => {\n      await api.saveTab(token, {\n        id: guid(),\n        title: \"New tab\",\n        index: tabs.length + 1,\n      });\n      await getTabs();\n    });\n  };\n\n  const saveTab = async (tab: NotesTab) => {\n    withErrorHandler(async () => {\n      await api.saveTab(token, tab);\n      await getTabs();\n    });\n  };\n\n  const removeTab = async (id: string) => {\n    withErrorHandler(async () => {\n      await api.removeTab(token, { id });\n      await getTabs();\n    });\n  };\n\n  const moveTabLeft = async (id: string) => {\n    withErrorHandler(async () => {\n      const tab = tabs.find((tab) => tab.id === id);\n      if (!tab) return;\n\n      const previousTab = getPreviousTab(tabs, tab);\n      if (!previousTab) return;\n\n      await api.switchTabOrder(token, tab.id, previousTab.id);\n      await getTabs();\n    });\n  };\n\n  return (\n    <TabContext.Provider\n      value={{\n        tabs,\n        tabsState,\n        getTabs,\n        addTab,\n        saveTab,\n        removeTab,\n        moveTabLeft,\n      }}\n    >\n      {children}\n    </TabContext.Provider>\n  );\n};\n","import React, { useState, useContext } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faTrash,\n  faArrowLeft,\n  faWrench,\n  faEdit,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport Nav from \"react-bootstrap/Nav\";\nimport Modal from \"react-bootstrap/Modal\";\nimport Button from \"react-bootstrap/Button\";\nimport Form from \"react-bootstrap/Form\";\nimport { TabContext } from \"./TabContext\";\n\nexport const TabNavItem: React.FunctionComponent<{\n  id: string;\n  index: number;\n  title: string;\n  isActive: boolean;\n}> = ({ id, index, title, isActive }) => {\n  const [showToolbar, setShowToolbar] = useState(false);\n  const [showModal, setShowModal] = useState(false);\n  const [isEditing, setIsEditing] = useState(false);\n  const [editedTitle, setEditedTitle] = useState(title);\n\n  const { saveTab, removeTab, moveTabLeft } = useContext(TabContext);\n\n  return (\n    <Nav.Item key={id} onBlur={() => setShowToolbar(false)}>\n      <Nav.Link eventKey={id}>\n        {isEditing ? (\n          <Form\n            onSubmit={(event: React.FormEvent<HTMLFormElement>) => {\n              event.preventDefault();\n              saveTab({ id, index, title: editedTitle });\n              setIsEditing(false);\n            }}\n            onBlur={() => {\n              saveTab({ id, index, title: editedTitle });\n              setIsEditing(false);\n            }}\n          >\n            <Form.Group>\n              <Form.Control\n                as=\"input\"\n                value={editedTitle}\n                onChange={(event) => setEditedTitle(event.target.value)}\n              />\n            </Form.Group>\n          </Form>\n        ) : (\n          editedTitle\n        )}\n        {showToolbar && isActive && !isEditing && (\n          <>\n            <FontAwesomeIcon\n              className=\"ml-2 fading\"\n              cursor=\"pointer\"\n              icon={faEdit}\n              onClick={(event) => {\n                event.stopPropagation();\n                setIsEditing(true);\n              }}\n            />\n            <FontAwesomeIcon\n              className=\"ml-2 fading\"\n              cursor=\"pointer\"\n              icon={faArrowLeft}\n              onClick={(event) => {\n                event.stopPropagation();\n                moveTabLeft(id);\n              }}\n            />\n            <FontAwesomeIcon\n              className=\"ml-2 fading\"\n              cursor=\"pointer\"\n              icon={faTrash}\n              onClick={(event) => {\n                event.stopPropagation();\n                setShowModal(true);\n              }}\n            />\n          </>\n        )}\n\n        {!showToolbar && isActive && !isEditing && (\n          <span className=\"fading\">\n            <FontAwesomeIcon\n              className=\"ml-2 fading\"\n              cursor=\"pointer\"\n              color={\"black\"}\n              icon={faWrench}\n              style={{ visibility: isActive ? \"visible\" : \"hidden\" }}\n              onClick={() => {\n                setShowToolbar(true);\n              }}\n            />\n          </span>\n        )}\n        <Modal show={showModal} animation={false} centered={true}>\n          <Modal.Header closeButton>\n            <Modal.Title>Remove tab</Modal.Title>\n          </Modal.Header>\n          <Modal.Footer>\n            <Button\n              variant=\"primary\"\n              onClick={() => {\n                removeTab(id);\n                setShowModal(false);\n              }}\n            >\n              Yes\n            </Button>\n            <Button variant=\"secondary\" onClick={() => setShowModal(false)}>\n              No\n            </Button>\n          </Modal.Footer>\n        </Modal>\n      </Nav.Link>\n    </Nav.Item>\n  );\n};\n","import React, { FunctionComponent, useState, useContext } from \"react\";\nimport Container from \"react-bootstrap/Container\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport Alert from \"react-bootstrap/Alert\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport { api } from \"./api\";\nimport { AuthContext } from \"./AuthContext\";\n\nexport const Login: FunctionComponent = () => {\n  const [userName, setUserName] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [mode, setMode] = useState<\"login\" | \"signup\">(\"login\");\n\n  const { saveToken } = useContext(AuthContext);\n\n  const login = async () => {\n    try {\n      setError(\"\");\n      const response = await api.login(userName, password);\n      saveToken(response.token);\n    } catch (error) {\n      setError(\"Could not login\");\n    }\n  };\n\n  const signup = async () => {\n    try {\n      setError(\"\");\n      await api.signup(userName, password);\n      setPassword(\"\");\n      setMode(\"login\");\n    } catch (error) {\n      setError(\"Could not register\");\n    }\n  };\n\n  const renderLogin = () => {\n    return (\n      <Form>\n        <Form.Group>\n          <Form.Label>Username</Form.Label>\n          <Form.Control\n            value={userName}\n            onChange={(event) => setUserName(event.target.value)}\n          />\n        </Form.Group>\n        <Form.Group>\n          <Form.Label>Password</Form.Label>\n          <Form.Control\n            type=\"password\"\n            value={password}\n            onChange={(event) => setPassword(event.target.value)}\n          />\n        </Form.Group>\n        <Form.Group>\n          <Button variant=\"primary\" onClick={login}>\n            Login\n          </Button>\n          <Button\n            variant=\"light\"\n            className=\"float-right\"\n            onClick={() => setMode(\"signup\")}\n          >\n            Sign up\n          </Button>\n        </Form.Group>\n      </Form>\n    );\n  };\n\n  const renderSignup = () => {\n    return (\n      <Form>\n        <Form.Group>\n          <Form.Label>Username</Form.Label>\n          <Form.Control\n            value={userName}\n            onChange={(event) => setUserName(event.target.value)}\n          />\n        </Form.Group>\n        <Form.Group>\n          <Form.Label>Password</Form.Label>\n\n          <Form.Control\n            type=\"password\"\n            value={password}\n            onChange={(event) => setPassword(event.target.value)}\n          />\n        </Form.Group>\n        <Form.Group>\n          <Button variant=\"primary\" onClick={signup}>\n            Sign up\n          </Button>\n        </Form.Group>\n      </Form>\n    );\n  };\n\n  return (\n    <Container fluid className=\"mt-1\">\n      {!!error && (\n        <Alert variant=\"danger\" dismissible={true} onClose={() => setError(\"\")}>\n          {error}\n        </Alert>\n      )}\n      <Row>\n        <Col xs={4}></Col>\n        <Col xs={4}>\n          <h1 className=\"mt-5 mb-3\">Notes</h1>\n          {mode === \"login\" && renderLogin()}\n          {mode === \"signup\" && renderSignup()}\n        </Col>\n        <Col xs={4}></Col>\n      </Row>\n    </Container>\n  );\n};\n","import React, { useState, useEffect, useContext } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlus, faSignOutAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Tab from \"react-bootstrap/Tab\";\nimport Nav from \"react-bootstrap/Nav\";\nimport Spinner from \"react-bootstrap/Spinner\";\nimport Alert from \"react-bootstrap/Alert\";\nimport { Note } from \"./Note\";\nimport { getNotesForColumn } from \"./App.utils\";\nimport { TabNavItem } from \"./TabNavItem\";\nimport { Login } from \"./Login\";\nimport { TabContext } from \"./TabContext\";\nimport { NoteContext } from \"./NoteContext\";\nimport { AuthContext } from \"./AuthContext\";\n\nfunction App() {\n  const [activeTab, setActiveTab] = useState(\"\");\n  const [columns] = useState([1, 2]);\n\n  const { authState, clearToken } = useContext(AuthContext);\n  const { tabs, getTabs, addTab, tabsState } = useContext(TabContext);\n  const { notes, getNotes, addNote, notesState } = useContext(NoteContext);\n\n  useEffect(() => {\n    const fetch = async () => {\n      await getTabs();\n      await getNotes();\n    };\n    if (authState === \"loggedIn\") {\n      fetch();\n    }\n  }, [getTabs, getNotes, authState]);\n\n  if (authState === \"loggedOut\") {\n    return <Login />;\n  }\n\n  return (\n    <Container fluid className=\"mt-1\">\n      {(notesState === \"error\" || tabsState === \"error\") && (\n        <Alert variant=\"danger\" dismissible={true}>\n          \"Something went wrong\"\n        </Alert>\n      )}\n      <Tab.Container\n        id=\"tabs\"\n        activeKey={activeTab}\n        onSelect={(tabId: string | null) => tabId && setActiveTab(tabId)}\n      >\n        <Nav variant=\"tabs\">\n          {tabs.map((tab) => (\n            <TabNavItem\n              key={tab.id}\n              id={tab.id}\n              index={tab.index}\n              title={tab.title}\n              isActive={activeTab === tab.id}\n            />\n          ))}\n          <Nav.Item key={\"999\"}>\n            <Nav.Link eventKey={\"999\"}>\n              <div className=\"fading\">\n                <FontAwesomeIcon\n                  className=\"fading\"\n                  cursor=\"pointer\"\n                  color={\"black\"}\n                  icon={faPlus}\n                  onClick={addTab}\n                />\n              </div>\n            </Nav.Link>\n          </Nav.Item>\n          <div\n            className=\"fading\"\n            style={{ position: \"absolute\", top: 13, right: 15 }}\n          >\n            <FontAwesomeIcon\n              className=\"fading\"\n              cursor=\"pointer\"\n              color={\"black\"}\n              icon={faSignOutAlt}\n              onClick={clearToken}\n            />\n          </div>\n        </Nav>\n\n        <Tab.Content>\n          {tabs.map((tab) => (\n            <Tab.Pane key={tab.id} eventKey={tab.id}>\n              <Row>\n                {columns.map((column) => (\n                  <Col key={column}>\n                    {getNotesForColumn(notes, tab.id, column).map((note) => (\n                      <Note key={note.id} note={note} />\n                    ))}\n                    <div className=\"mt-4 mb-4 fading\">\n                      <span className=\"fading\">\n                        <FontAwesomeIcon\n                          style={{ alignSelf: \"center\", width: \"100%\" }}\n                          cursor=\"pointer\"\n                          color={\"black\"}\n                          icon={faPlus}\n                          onClick={() => addNote(tab.id, column)}\n                        />\n                      </span>\n                    </div>\n                  </Col>\n                ))}\n              </Row>\n            </Tab.Pane>\n          ))}\n        </Tab.Content>\n      </Tab.Container>\n      {(tabsState === \"loading\" || notesState === \"loading\") && (\n        <Spinner\n          animation=\"border\"\n          variant=\"primary\"\n          size=\"sm\"\n          style={{\n            position: \"fixed\",\n            right: \"50%\",\n            zIndex: 999,\n            top: \"50%\",\n          }}\n        />\n      )}\n    </Container>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { TabProvider } from \"./TabContext\";\nimport { NoteProvider } from \"./NoteContext\";\nimport { AuthProvider } from \"./AuthContext\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <AuthProvider>\n      <TabProvider>\n        <NoteProvider>\n          <App />\n        </NoteProvider>\n      </TabProvider>\n    </AuthProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}